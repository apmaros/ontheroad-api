on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
      - uses: aws-actions/setup-sam@v1
      - name: install-aws-cli-action
        uses: unfor19/install-aws-cli-action@v1
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: 790519624110.dkr.ecr.eu-west-1.amazonaws.com
          ECR_REPOSITORY: ontheroad-api
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      - name: Deploy VPC
        run: |
          aws cloudformation create-stack --stack-name ontheroad-vpc \
            --template-body file://cloudformation/vpc-template.yaml \
            --region=eu-west-1
      - name: Deploy OnTheRoadAPI ECS
        run: |
          sam deploy --template-file cloudformation/ontheroad-api-ecs-fargate-template.yml \
            --stack-name ontheroad-api \
            --region eu-west-1  \
            --no-confirm-changeset --no-fail-on-empty-changeset
      # build lambda
      - run: sam build --template-file cloudformation/ontheroad-s3-sync-template.yaml
      # deploy infra
      - run: sam deploy --no-confirm-changeset --no-fail-on-empty-changeset --stack-name ontheroad-sync --s3-bucket ontheroad-s3-sync --capabilities CAPABILITY_IAM --region eu-west-1
